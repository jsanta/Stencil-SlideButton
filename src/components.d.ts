/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';


export namespace Components {

  interface SlideButton {
    'boundary': number;
    'buttontext': string;
    'disabled': boolean;
    'endDrag': (e: any) => void;
    'helpertext': string;
    'instructions': string;
  }
  interface SlideButtonAttributes extends StencilHTMLAttributes {
    'boundary'?: number;
    'buttontext'?: string;
    'disabled'?: boolean;
    'helpertext'?: string;
    'instructions'?: string;
    'onOnSlideReady'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'SlideButton': Components.SlideButton;
  }

  interface StencilIntrinsicElements {
    'slide-button': Components.SlideButtonAttributes;
  }


  interface HTMLSlideButtonElement extends Components.SlideButton, HTMLStencilElement {}
  var HTMLSlideButtonElement: {
    prototype: HTMLSlideButtonElement;
    new (): HTMLSlideButtonElement;
  };

  interface HTMLElementTagNameMap {
    'slide-button': HTMLSlideButtonElement
  }

  interface ElementTagNameMap {
    'slide-button': HTMLSlideButtonElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
